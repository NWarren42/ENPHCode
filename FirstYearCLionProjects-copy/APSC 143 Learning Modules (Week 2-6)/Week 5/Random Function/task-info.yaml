type: output
files:
- name: test/output.txt
  visible: false
  text: |
    #-50: 7
    #-49: 2
    #-48: 2
    #-47: 2
    #-46: 1
    #-45: 1
    #-44: 1
    #-43: 2
    #-42: 1
    #-41: 0
    #-40: 3
    #-39: 4
    #-38: 3
    #-37: 4
    #-36: 0
    #-35: 0
    #-34: 0
    #-33: 1
    #-32: 2
    #-31: 3
    #-30: 2
    #-29: 2
    #-28: 1
    #-27: 0
    #-26: 2
    #-25: 2
    #-24: 0
    #-23: 4
    #-22: 3
    #-21: 2
    #-20: 6
    #-19: 3
    #-18: 3
    #-17: 1
    #-16: 2
    #-15: 4
    #-14: 2
    #-13: 2
    #-12: 3
    #-11: 0
    #-10: 1
    #-9: 2
    #-8: 2
    #-7: 1
    #-6: 1
    #-5: 2
    #-4: 3
    #-3: 2
    #-2: 2
    #-1: 2
    #0: 3
    #1: 0
    #2: 3
    #3: 2
    #4: 1
    #5: 1
    #6: 4
    #7: 0
    #8: 1
    #9: 2
    #10: 1
    #11: 1
    #12: 6
    #13: 2
    #14: 2
    #15: 1
    #16: 1
    #17: 2
    #18: 2
    #19: 4
    #20: 1
    #21: 1
    #22: 2
    #23: 1
    #24: 0
    #25: 5
    #26: 1
    #27: 4
    #28: 1
    #29: 3
    #30: 4
    #31: 0
    #32: 0
    #33: 1
    #34: 1
    #35: 1
    #36: 1
    #37: 1
    #38: 3
    #39: 1
    #40: 2
    #41: 2
    #42: 1
    #43: 7
    #44: 0
    #45: 2
    #46: 2
    #47: 1
    #48: 3
    #49: 4
    #50: 4
  learner_created: false
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.19)

    project(global-Week_5-Random_Function)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/main.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})
  learner_created: false
- name: src/main.cpp
  visible: true
  placeholders:
  - offset: 19
    length: 34
    placeholder_text: /* Include the standard library */
    initial_state:
      length: 34
      offset: 19
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: '#include <stdlib.h>'
  - offset: 108
    length: 30
    placeholder_text: /* Seed the random function */
    initial_state:
      length: 30
      offset: 108
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: srand(2);
  - offset: 289
    length: 52
    placeholder_text: /* Generate random value & count it in distribute */
    initial_state:
      length: 52
      offset: 289
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      randoms = rand() % SIZE + 1;
              distribute[randoms - 1]++;
  text: |-
    #include <stdio.h>
    /* Include the standard library */

    #define TRIALS 200
    #define SIZE 50

    int main() {
        /* Seed the random function */
        int randoms;
        int distribute[SIZE];
        for(int i = 0; i < SIZE; i++)
            distribute[i] = 0;
        for(int i = 0; i < TRIALS; i++) {
            /* Generate random value & count it in distribute */
        }
        for(int i = 0; i < SIZE; i++)
            printf("#%d: %d\n", i + 1, distribute[i]);
    }
  learner_created: false
status: Unchecked
record: -1
