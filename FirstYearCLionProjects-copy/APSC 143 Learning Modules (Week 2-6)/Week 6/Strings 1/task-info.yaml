type: output
files:
- name: test/output.txt
  visible: false
  text: |
    Word = "pear"
    Average letter = 'j'
  learner_created: false
- name: CMakeLists.txt
  visible: false
  text: |-
    cmake_minimum_required(VERSION 3.19)

    project(global-Week_6-Strings_1)

    set(CMAKE_CXX_STANDARD 14)

    # Files from `./src` directory
    set(SRC
            src/main.cpp)


    # Running learner side code
    # Use PROJECT_NAME dependent names of targets for the plugin support to work correctly.
    add_executable(${PROJECT_NAME}-run ${SRC})
  learner_created: false
- name: src/main.cpp
  visible: true
  placeholders:
  - offset: 52
    length: 21
    placeholder_text: /* Initialize word */
    initial_state:
      length: 21
      offset: 52
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: '{''p'', ''e'', ''a'', ''r'', ''\0''}'
  - offset: 155
    length: 25
    placeholder_text: /* Find average letter */
    initial_state:
      length: 25
      offset: 155
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      for (int i = 0; i < wordSize; i++)
              average += word[i];
          average /= wordSize;
  - offset: 192
    length: 17
    placeholder_text: /* Output word */
    initial_state:
      length: 17
      offset: 192
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: '"Word = \"%s\"\n", word'
  text: |-
    #include <stdio.h>

    int main() {
        char word[5] = /* Initialize word */;
        int average = 0;
        int wordSize = sizeof(word) / sizeof(word[0]) - 1;
        /* Find average letter */
        printf(/* Output word */);
        printf("Average letter = '%c'\n", average);
    }
  learner_created: false
status: Unchecked
record: -1
